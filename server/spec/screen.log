Script started on to 15. tammikuuta 2015 22.33.43
Now using node v0.11.14
]0;antti@antti-VirtualBox: ~/code/meshop/server/specantti@antti-VirtualBox:~/code/meshop/server/spec$ git push origin shop[4Pcommit -m"a"[1P"[2Padd --allpush origin shopcommit -m"paypal payment"[9Ppush origin shop[7Padd --allcommit -m""a"push origin shop[Kmocha 
npm-debug.log   routes.spec.js  screen.log      
]0;antti@antti-VirtualBox: ~/code/meshop/server/specantti@antti-VirtualBox:~/code/meshop/server/spec$ mocha routes.spec.js 

[0m[0m
[0m  express rest api server[0m
{}
[2K[0G  [31m  1) gets orderconfirmation[0m


[92m [0m[32m 0 passing[0m[90m (57ms)[0m
[31m  1 failing[0m

[0m  1) express rest api server gets orderconfirmation:
[0m[31m     Uncaught Error: expected undefined to be above 0[0m[90m
      at Assertion.assert (/home/antti/code/meshop/server/node_modules/expect.js/index.js:96:13)
      at Assertion.greaterThan.Assertion.above (/home/antti/code/meshop/server/node_modules/expect.js/index.js:297:10)
      at Function.<anonymous> (/home/antti/code/meshop/server/node_modules/expect.js/index.js:499:17)
      at /home/antti/code/meshop/server/spec/routes.spec.js:41:38
      at Request.callback (/home/antti/code/meshop/server/node_modules/superagent/lib/node/index.js:746:30)
      at Request.<anonymous> (/home/antti/code/meshop/server/node_modules/superagent/lib/node/index.js:135:10)
      at Request.emit (events.js:129:20)
      at Stream.<anonymous> (/home/antti/code/meshop/server/node_modules/superagent/lib/node/index.js:938:12)
      at Stream.emit (events.js:129:20)
      at Unzip.<anonymous> (/home/antti/code/meshop/server/node_modules/superagent/lib/node/utils.js:124:12)
      at Unzip.emit (events.js:129:20)
      at _stream_readable.js:907:16
      at process._tickCallback (node.js:372:11)
[0m


]0;antti@antti-VirtualBox: ~/code/meshop/server/specantti@antti-VirtualBox:~/code/meshop/server/spec$ mocha routes.spec.js 

[0m[0m
[0m  express rest api server[0m
{ domain: null,
  _events: {},
  _maxListeners: undefined,
  res: 
   { _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: false,
     domain: null,
     _events: { end: [Object], close: [Function], error: [Function] },
     _maxListeners: undefined,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 436,
        _bytesDispatched: 136,
        _pendingData: null,
        _pendingEncoding: '',
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 436,
        _bytesDispatched: 136,
        _pendingData: null,
        _pendingEncoding: '',
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers: 
      { server: 'nginx/1.4.6 (Ubuntu)',
        date: 'Thu, 15 Jan 2015 20:34:16 GMT',
        'content-type': 'text/html; charset=utf-8',
        'transfer-encoding': 'chunked',
        connection: 'close',
        'x-powered-by': 'Express',
        'x-content-type-options': 'nosniff',
        'set-cookie': [Object],
        'content-encoding': 'gzip' },
     rawHeaders: 
      [ 'Server',
        'nginx/1.4.6 (Ubuntu)',
        'Date',
        'Thu, 15 Jan 2015 20:34:16 GMT',
        'Content-Type',
        'text/html; charset=utf-8',
        'Transfer-Encoding',
        'chunked',
        'Connection',
        'close',
        'X-Powered-By',
        'Express',
        'X-Content-Type-Options',
        'nosniff',
        'Set-Cookie',
        'connect.sid=s%3A62IHiwGgTnxig722wtdAqV4p.BdIUl7mX7f26tdaJgNLnOry%2BcWbUSLLQE8a58wKVSXY; Path=/; HttpOnly',
        'Content-Encoding',
        'gzip' ],
     trailers: {},
     rawTrailers: [],
     _pendings: [],
     _pendingIndex: 0,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 404,
     statusMessage: 'Not Found',
     client: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 436,
        _bytesDispatched: 136,
        _pendingData: null,
        _pendingEncoding: '',
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     _consuming: true,
     _dumped: false,
     req: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedHeader: {},
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        socket: [Object],
        connection: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'GET',
        path: '//secure/signup',
        _headers: [Object],
        _headerNames: [Object],
        _header: 'GET //secure/signup HTTP/1.1\r\nHost: localhost\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/0.21.0\r\nConnection: close\r\n\r\n',
        _headerSent: true,
        parser: null,
        res: [Circular] },
     setEncoding: [Function],
     on: [Function],
     text: 'Cannot GET //secure/signup\n',
     read: [Function],
     body: undefined },
  request: 
   { domain: null,
     _events: { end: [Function], response: [Object], redirect: [Object] },
     _maxListeners: undefined,
     _agent: false,
     _formData: null,
     method: 'GET',
     url: 'http://localhost//secure/signup',
     header: {},
     writable: true,
     _redirects: 0,
     _maxRedirects: 5,
     cookies: '',
     qs: {},
     _redirectList: [],
     _ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 70 54 43 43 41 6f 32 67 41 77 49 42 41 67 49 4a 41 49 ... >,
     req: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedHeader: {},
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        socket: [Object],
        connection: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'GET',
        path: '//secure/signup',
        _headers: [Object],
        _headerNames: [Object],
        _header: 'GET //secure/signup HTTP/1.1\r\nHost: localhost\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/0.21.0\r\nConnection: close\r\n\r\n',
        _headerSent: true,
        parser: null,
        res: [Object] },
     protocol: 'http:',
     host: 'localhost',
     _callback: [Function],
     res: 
      { _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Object],
        trailers: {},
        rawTrailers: [],
        _pendings: [],
        _pendingIndex: 0,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 404,
        statusMessage: 'Not Found',
        client: [Object],
        _consuming: true,
        _dumped: false,
        req: [Object],
        setEncoding: [Function],
        on: [Function],
        text: 'Cannot GET //secure/signup\n',
        read: [Function],
        body: undefined },
     response: [Circular],
     _timeout: 0,
     called: true },
  req: 
   { domain: null,
     _events: { drain: [Function], error: [Function], response: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: false,
     sendDate: false,
     _removedHeader: {},
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 436,
        _bytesDispatched: 136,
        _pendingData: null,
        _pendingEncoding: '',
        parser: null,
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 436,
        _bytesDispatched: 136,
        _pendingData: null,
        _pendingEncoding: '',
        parser: null,
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: {},
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'GET',
     path: '//secure/signup',
     _headers: 
      { host: 'localhost',
        'accept-encoding': 'gzip, deflate',
        'user-agent': 'node-superagent/0.21.0' },
     _headerNames: 
      { host: 'Host',
        'accept-encoding': 'Accept-Encoding',
        'user-agent': 'User-Agent' },
     _header: 'GET //secure/signup HTTP/1.1\r\nHost: localhost\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/0.21.0\r\nConnection: close\r\n\r\n',
     _headerSent: true,
     parser: null,
     res: 
      { _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Object],
        trailers: {},
        rawTrailers: [],
        _pendings: [],
        _pendingIndex: 0,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 404,
        statusMessage: 'Not Found',
        client: [Object],
        _consuming: true,
        _dumped: false,
        req: [Circular],
        setEncoding: [Function],
        on: [Function],
        text: 'Cannot GET //secure/signup\n',
        read: [Function],
        body: undefined } },
  links: {},
  text: 'Cannot GET //secure/signup\n',
  body: {},
  files: {},
  buffered: true,
  headers: 
   { server: 'nginx/1.4.6 (Ubuntu)',
     date: 'Thu, 15 Jan 2015 20:34:16 GMT',
     'content-type': 'text/html; charset=utf-8',
     'transfer-encoding': 'chunked',
     connection: 'close',
     'x-powered-by': 'Express',
     'x-content-type-options': 'nosniff',
     'set-cookie': [ 'connect.sid=s%3A62IHiwGgTnxig722wtdAqV4p.BdIUl7mX7f26tdaJgNLnOry%2BcWbUSLLQE8a58wKVSXY; Path=/; HttpOnly' ],
     'content-encoding': 'gzip' },
  header: 
   { server: 'nginx/1.4.6 (Ubuntu)',
     date: 'Thu, 15 Jan 2015 20:34:16 GMT',
     'content-type': 'text/html; charset=utf-8',
     'transfer-encoding': 'chunked',
     connection: 'close',
     'x-powered-by': 'Express',
     'x-content-type-options': 'nosniff',
     'set-cookie': [ 'connect.sid=s%3A62IHiwGgTnxig722wtdAqV4p.BdIUl7mX7f26tdaJgNLnOry%2BcWbUSLLQE8a58wKVSXY; Path=/; HttpOnly' ],
     'content-encoding': 'gzip' },
  statusCode: 404,
  status: 404,
  statusType: 4,
  info: false,
  ok: false,
  redirect: false,
  clientError: true,
  serverError: false,
  error: 
   { [Error: cannot GET //secure/signup (404)]
     status: 404,
     text: 'Cannot GET //secure/signup\n',
     method: 'GET',
     path: '//secure/signup' },
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: true,
  charset: 'utf-8',
  type: 'text/html',
  setEncoding: [Function],
  redirects: [] }
[2K[0G  [31m  1) gets orderconfirmation[0m


[92m [0m[32m 0 passing[0m[90m (109ms)[0m
[31m  1 failing[0m

[0m  1) express rest api server gets orderconfirmation:
[0m[31m     Uncaught Error: expected undefined to be above 0[0m[90m
      at Assertion.assert (/home/antti/code/meshop/server/node_modules/expect.js/index.js:96:13)
      at Assertion.greaterThan.Assertion.above (/home/antti/code/meshop/server/node_modules/expect.js/index.js:297:10)
      at Function.<anonymous> (/home/antti/code/meshop/server/node_modules/expect.js/index.js:499:17)
      at /home/antti/code/meshop/server/spec/routes.spec.js:41:38
      at Request.callback (/home/antti/code/meshop/server/node_modules/superagent/lib/node/index.js:746:30)
      at Request.<anonymous> (/home/antti/code/meshop/server/node_modules/superagent/lib/node/index.js:135:10)
      at Request.emit (events.js:129:20)
      at Stream.<anonymous> (/home/antti/code/meshop/server/node_modules/superagent/lib/node/index.js:938:12)
      at Stream.emit (events.js:129:20)
      at Unzip.<anonymous> (/home/antti/code/meshop/server/node_modules/superagent/lib/node/utils.js:124:12)
      at Unzip.emit (events.js:129:20)
      at _stream_readable.js:907:16
      at process._tickCallback (node.js:372:11)
[0m


]0;antti@antti-VirtualBox: ~/code/meshop/server/specantti@antti-VirtualBox:~/code/meshop/server/spec$ mocha routes.spec.js 

[0m[0m
[0m  express rest api server[0m
{ domain: null,
  _events: {},
  _maxListeners: undefined,
  res: 
   { _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: [Object],
        encoding: 'utf8',
        resumeScheduled: false },
     readable: false,
     domain: null,
     _events: 
      { end: [Object],
        data: [Object],
        close: [Function],
        error: [Function] },
     _maxListeners: undefined,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 238,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 238,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers: 
      { 'x-powered-by': 'Express',
        'content-type': 'text/html; charset=utf-8',
        'content-length': '3489',
        etag: 'W/"Zwfn18UrcBPYVCw28QZc3A=="',
        date: 'Thu, 15 Jan 2015 20:36:59 GMT',
        connection: 'close' },
     rawHeaders: 
      [ 'X-Powered-By',
        'Express',
        'Content-Type',
        'text/html; charset=utf-8',
        'Content-Length',
        '3489',
        'ETag',
        'W/"Zwfn18UrcBPYVCw28QZc3A=="',
        'Date',
        'Thu, 15 Jan 2015 20:36:59 GMT',
        'Connection',
        'close' ],
     trailers: {},
     rawTrailers: [],
     _pendings: [],
     _pendingIndex: 0,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 238,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     _consuming: true,
     _dumped: false,
     req: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedHeader: {},
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        socket: [Object],
        connection: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'GET',
        path: '/secure/signup',
        _headers: [Object],
        _headerNames: [Object],
        _header: 'GET /secure/signup HTTP/1.1\r\nHost: localhost:8000\r\naccept-encoding: gzip, deflate\r\nCookie: connect.sid=s%3AILexlJy8MZniVbDTMwd4QHtJ.DoEz9ny%2BSleHuWljt87cJuN%2BfHEFF0j1ILodOWbZerg\r\nuser-agent: node-superagent/0.21.0\r\nConnection: close\r\n\r\n',
        _headerSent: true,
        parser: null,
        res: [Circular] },
     text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
     read: [Function],
     body: undefined },
  request: 
   { domain: null,
     _events: { end: [Function], response: [Object], redirect: [Object] },
     _maxListeners: undefined,
     _agent: false,
     _formData: null,
     method: 'GET',
     url: 'https://localhost:8000/secure/signup',
     header: {},
     writable: true,
     _redirects: 1,
     _maxRedirects: 5,
     cookies: 'connect.sid=s%3AILexlJy8MZniVbDTMwd4QHtJ.DoEz9ny%2BSleHuWljt87cJuN%2BfHEFF0j1ILodOWbZerg',
     qs: {},
     _redirectList: [ 'https://localhost:8000/secure/signup' ],
     _ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 70 54 43 43 41 6f 32 67 41 77 49 42 41 67 49 4a 41 49 ... >,
     protocol: 'https:',
     host: 'localhost:8000',
     _callback: [Function],
     res: 
      { _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Object],
        trailers: {},
        rawTrailers: [],
        _pendings: [],
        _pendingIndex: 0,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Object],
        _consuming: true,
        _dumped: false,
        req: [Object],
        text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
        read: [Function],
        body: undefined },
     _data: null,
     _timeout: 0,
     req: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedHeader: {},
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        socket: [Object],
        connection: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'GET',
        path: '/secure/signup',
        _headers: [Object],
        _headerNames: [Object],
        _header: 'GET /secure/signup HTTP/1.1\r\nHost: localhost:8000\r\naccept-encoding: gzip, deflate\r\nCookie: connect.sid=s%3AILexlJy8MZniVbDTMwd4QHtJ.DoEz9ny%2BSleHuWljt87cJuN%2BfHEFF0j1ILodOWbZerg\r\nuser-agent: node-superagent/0.21.0\r\nConnection: close\r\n\r\n',
        _headerSent: true,
        parser: null,
        res: [Object] },
     response: [Circular],
     called: true },
  req: 
   { domain: null,
     _events: { drain: [Function], error: [Function], response: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: false,
     sendDate: false,
     _removedHeader: {},
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 238,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 238,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 443,
        protocol: 'https:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'GET',
     path: '/secure/signup',
     _headers: 
      { host: 'localhost:8000',
        'accept-encoding': 'gzip, deflate',
        cookie: 'connect.sid=s%3AILexlJy8MZniVbDTMwd4QHtJ.DoEz9ny%2BSleHuWljt87cJuN%2BfHEFF0j1ILodOWbZerg',
        'user-agent': 'node-superagent/0.21.0' },
     _headerNames: 
      { host: 'Host',
        'accept-encoding': 'accept-encoding',
        cookie: 'Cookie',
        'user-agent': 'user-agent' },
     _header: 'GET /secure/signup HTTP/1.1\r\nHost: localhost:8000\r\naccept-encoding: gzip, deflate\r\nCookie: connect.sid=s%3AILexlJy8MZniVbDTMwd4QHtJ.DoEz9ny%2BSleHuWljt87cJuN%2BfHEFF0j1ILodOWbZerg\r\nuser-agent: node-superagent/0.21.0\r\nConnection: close\r\n\r\n',
     _headerSent: true,
     parser: null,
     res: 
      { _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Object],
        trailers: {},
        rawTrailers: [],
        _pendings: [],
        _pendingIndex: 0,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Object],
        _consuming: true,
        _dumped: false,
        req: [Circular],
        text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
        read: [Function],
        body: undefined } },
  links: {},
  text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
  body: {},
  files: {},
  buffered: true,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'text/html; charset=utf-8',
     'content-length': '3489',
     etag: 'W/"Zwfn18UrcBPYVCw28QZc3A=="',
     date: 'Thu, 15 Jan 2015 20:36:59 GMT',
     connection: 'close' },
  header: 
   { 'x-powered-by': 'Express',
     'content-type': 'text/html; charset=utf-8',
     'content-length': '3489',
     etag: 'W/"Zwfn18UrcBPYVCw28QZc3A=="',
     date: 'Thu, 15 Jan 2015 20:36:59 GMT',
     connection: 'close' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  charset: 'utf-8',
  type: 'text/html',
  setEncoding: [Function],
  redirects: [ 'https://localhost:8000/secure/signup' ] }
[2K[0G  [31m  1) gets orderconfirmation[0m


[92m [0m[32m 0 passing[0m[90m (182ms)[0m
[31m  1 failing[0m

[0m  1) express rest api server gets orderconfirmation:
[0m[31m     Uncaught Error: expected undefined to be above 0[0m[90m
      at Assertion.assert (/home/antti/code/meshop/server/node_modules/expect.js/index.js:96:13)
      at Assertion.greaterThan.Assertion.above (/home/antti/code/meshop/server/node_modules/expect.js/index.js:297:10)
      at Function.<anonymous> (/home/antti/code/meshop/server/node_modules/expect.js/index.js:499:17)
      at /home/antti/code/meshop/server/spec/routes.spec.js:41:38
      at Request.callback (/home/antti/code/meshop/server/node_modules/superagent/lib/node/index.js:746:30)
      at Request.<anonymous> (/home/antti/code/meshop/server/node_modules/superagent/lib/node/index.js:135:10)
      at Request.emit (events.js:129:20)
      at IncomingMessage.<anonymous> (/home/antti/code/meshop/server/node_modules/superagent/lib/node/index.js:938:12)
      at IncomingMessage.emit (events.js:129:20)
      at _stream_readable.js:907:16
      at process._tickCallback (node.js:372:11)
[0m


]0;antti@antti-VirtualBox: ~/code/meshop/server/specantti@antti-VirtualBox:~/code/meshop/server/spec$ mocha routes.spec.js 

[0m[0m
[0m  express rest api server[0m
{ domain: null,
  _events: {},
  _maxListeners: undefined,
  res: 
   { _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: [Object],
        encoding: 'utf8',
        resumeScheduled: false },
     readable: false,
     domain: null,
     _events: 
      { end: [Object],
        data: [Object],
        close: [Function],
        error: [Function] },
     _maxListeners: undefined,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 234,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 234,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers: 
      { 'x-powered-by': 'Express',
        'content-type': 'text/html; charset=utf-8',
        'content-length': '3489',
        etag: 'W/"Zwfn18UrcBPYVCw28QZc3A=="',
        date: 'Thu, 15 Jan 2015 20:38:40 GMT',
        connection: 'close' },
     rawHeaders: 
      [ 'X-Powered-By',
        'Express',
        'Content-Type',
        'text/html; charset=utf-8',
        'Content-Length',
        '3489',
        'ETag',
        'W/"Zwfn18UrcBPYVCw28QZc3A=="',
        'Date',
        'Thu, 15 Jan 2015 20:38:40 GMT',
        'Connection',
        'close' ],
     trailers: {},
     rawTrailers: [],
     _pendings: [],
     _pendingIndex: 0,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 234,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     _consuming: true,
     _dumped: false,
     req: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedHeader: {},
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        socket: [Object],
        connection: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'GET',
        path: '/secure/signup',
        _headers: [Object],
        _headerNames: [Object],
        _header: 'GET /secure/signup HTTP/1.1\r\nHost: localhost:8000\r\naccept-encoding: gzip, deflate\r\nCookie: connect.sid=s%3A0IiZOrqKrqzk2L8aKrXyJGhY.qfpmdoGJ0ocXQHyqWawg7tXCeSNbEshwgdwmBCstBKU\r\nuser-agent: node-superagent/0.21.0\r\nConnection: close\r\n\r\n',
        _headerSent: true,
        parser: null,
        res: [Circular] },
     text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
     read: [Function],
     body: undefined },
  request: 
   { domain: null,
     _events: { end: [Function], response: [Object], redirect: [Object] },
     _maxListeners: undefined,
     _agent: false,
     _formData: null,
     method: 'GET',
     url: 'https://localhost:8000/secure/signup',
     header: {},
     writable: true,
     _redirects: 1,
     _maxRedirects: 5,
     cookies: 'connect.sid=s%3A0IiZOrqKrqzk2L8aKrXyJGhY.qfpmdoGJ0ocXQHyqWawg7tXCeSNbEshwgdwmBCstBKU',
     qs: {},
     _redirectList: [ 'https://localhost:8000/secure/signup' ],
     _ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 70 54 43 43 41 6f 32 67 41 77 49 42 41 67 49 4a 41 49 ... >,
     protocol: 'https:',
     host: 'localhost:8000',
     _callback: [Function],
     res: 
      { _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Object],
        trailers: {},
        rawTrailers: [],
        _pendings: [],
        _pendingIndex: 0,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Object],
        _consuming: true,
        _dumped: false,
        req: [Object],
        text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
        read: [Function],
        body: undefined },
     _data: null,
     _timeout: 0,
     req: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedHeader: {},
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        socket: [Object],
        connection: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'GET',
        path: '/secure/signup',
        _headers: [Object],
        _headerNames: [Object],
        _header: 'GET /secure/signup HTTP/1.1\r\nHost: localhost:8000\r\naccept-encoding: gzip, deflate\r\nCookie: connect.sid=s%3A0IiZOrqKrqzk2L8aKrXyJGhY.qfpmdoGJ0ocXQHyqWawg7tXCeSNbEshwgdwmBCstBKU\r\nuser-agent: node-superagent/0.21.0\r\nConnection: close\r\n\r\n',
        _headerSent: true,
        parser: null,
        res: [Object] },
     response: [Circular],
     called: true },
  req: 
   { domain: null,
     _events: { drain: [Function], error: [Function], response: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: false,
     sendDate: false,
     _removedHeader: {},
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 234,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 234,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 443,
        protocol: 'https:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'GET',
     path: '/secure/signup',
     _headers: 
      { host: 'localhost:8000',
        'accept-encoding': 'gzip, deflate',
        cookie: 'connect.sid=s%3A0IiZOrqKrqzk2L8aKrXyJGhY.qfpmdoGJ0ocXQHyqWawg7tXCeSNbEshwgdwmBCstBKU',
        'user-agent': 'node-superagent/0.21.0' },
     _headerNames: 
      { host: 'Host',
        'accept-encoding': 'accept-encoding',
        cookie: 'Cookie',
        'user-agent': 'user-agent' },
     _header: 'GET /secure/signup HTTP/1.1\r\nHost: localhost:8000\r\naccept-encoding: gzip, deflate\r\nCookie: connect.sid=s%3A0IiZOrqKrqzk2L8aKrXyJGhY.qfpmdoGJ0ocXQHyqWawg7tXCeSNbEshwgdwmBCstBKU\r\nuser-agent: node-superagent/0.21.0\r\nConnection: close\r\n\r\n',
     _headerSent: true,
     parser: null,
     res: 
      { _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Object],
        trailers: {},
        rawTrailers: [],
        _pendings: [],
        _pendingIndex: 0,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Object],
        _consuming: true,
        _dumped: false,
        req: [Circular],
        text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
        read: [Function],
        body: undefined } },
  links: {},
  text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
  body: {},
  files: {},
  buffered: true,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'text/html; charset=utf-8',
     'content-length': '3489',
     etag: 'W/"Zwfn18UrcBPYVCw28QZc3A=="',
     date: 'Thu, 15 Jan 2015 20:38:40 GMT',
     connection: 'close' },
  header: 
   { 'x-powered-by': 'Express',
     'content-type': 'text/html; charset=utf-8',
     'content-length': '3489',
     etag: 'W/"Zwfn18UrcBPYVCw28QZc3A=="',
     date: 'Thu, 15 Jan 2015 20:38:40 GMT',
     connection: 'close' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  charset: 'utf-8',
  type: 'text/html',
  setEncoding: [Function],
  redirects: [ 'https://localhost:8000/secure/signup' ] }
[2K[0G  [32m  ✓[0m[90m gets orderconfirmation [0m[31m(176ms)[0m


[92m [0m[32m 1 passing[0m[90m (185ms)[0m

]0;antti@antti-VirtualBox: ~/code/meshop/server/specantti@antti-VirtualBox:~/code/meshop/server/spec$ mocha routes.spec.js 

[0m[0m
[0m  express rest api server[0m
{ domain: null,
  _events: {},
  _maxListeners: undefined,
  res: 
   { _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: [Object],
        encoding: 'utf8',
        resumeScheduled: false },
     readable: false,
     domain: null,
     _events: 
      { end: [Object],
        data: [Object],
        close: [Function],
        error: [Function] },
     _maxListeners: undefined,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 236,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 236,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers: 
      { 'x-powered-by': 'Express',
        'content-type': 'text/html; charset=utf-8',
        'content-length': '3489',
        etag: 'W/"Zwfn18UrcBPYVCw28QZc3A=="',
        date: 'Thu, 15 Jan 2015 20:39:41 GMT',
        connection: 'close' },
     rawHeaders: 
      [ 'X-Powered-By',
        'Express',
        'Content-Type',
        'text/html; charset=utf-8',
        'Content-Length',
        '3489',
        'ETag',
        'W/"Zwfn18UrcBPYVCw28QZc3A=="',
        'Date',
        'Thu, 15 Jan 2015 20:39:41 GMT',
        'Connection',
        'close' ],
     trailers: {},
     rawTrailers: [],
     _pendings: [],
     _pendingIndex: 0,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 236,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     _consuming: true,
     _dumped: false,
     req: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedHeader: {},
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        socket: [Object],
        connection: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'GET',
        path: '/secure/signup',
        _headers: [Object],
        _headerNames: [Object],
        _header: 'GET /secure/signup HTTP/1.1\r\nHost: localhost:8000\r\naccept-encoding: gzip, deflate\r\nCookie: connect.sid=s%3AKDtBdzw29bMB2ge32x9VYXk9.dMdd6L0nRnrwOS%2Fw6en9C6XoPbc3zG2rBxAxCXDsSmU\r\nuser-agent: node-superagent/0.21.0\r\nConnection: close\r\n\r\n',
        _headerSent: true,
        parser: null,
        res: [Circular] },
     text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
     read: [Function],
     body: undefined },
  request: 
   { domain: null,
     _events: { end: [Function], response: [Object], redirect: [Object] },
     _maxListeners: undefined,
     _agent: false,
     _formData: null,
     method: 'GET',
     url: 'https://localhost:8000/secure/signup',
     header: {},
     writable: true,
     _redirects: 1,
     _maxRedirects: 5,
     cookies: 'connect.sid=s%3AKDtBdzw29bMB2ge32x9VYXk9.dMdd6L0nRnrwOS%2Fw6en9C6XoPbc3zG2rBxAxCXDsSmU',
     qs: {},
     _redirectList: [ 'https://localhost:8000/secure/signup' ],
     _ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 70 54 43 43 41 6f 32 67 41 77 49 42 41 67 49 4a 41 49 ... >,
     protocol: 'https:',
     host: 'localhost:8000',
     _callback: [Function],
     res: 
      { _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Object],
        trailers: {},
        rawTrailers: [],
        _pendings: [],
        _pendingIndex: 0,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Object],
        _consuming: true,
        _dumped: false,
        req: [Object],
        text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
        read: [Function],
        body: undefined },
     _data: null,
     _timeout: 0,
     req: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedHeader: {},
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        socket: [Object],
        connection: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'GET',
        path: '/secure/signup',
        _headers: [Object],
        _headerNames: [Object],
        _header: 'GET /secure/signup HTTP/1.1\r\nHost: localhost:8000\r\naccept-encoding: gzip, deflate\r\nCookie: connect.sid=s%3AKDtBdzw29bMB2ge32x9VYXk9.dMdd6L0nRnrwOS%2Fw6en9C6XoPbc3zG2rBxAxCXDsSmU\r\nuser-agent: node-superagent/0.21.0\r\nConnection: close\r\n\r\n',
        _headerSent: true,
        parser: null,
        res: [Object] },
     response: [Circular],
     called: true },
  req: 
   { domain: null,
     _events: { drain: [Function], error: [Function], response: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: false,
     sendDate: false,
     _removedHeader: {},
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 236,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 236,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 443,
        protocol: 'https:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'GET',
     path: '/secure/signup',
     _headers: 
      { host: 'localhost:8000',
        'accept-encoding': 'gzip, deflate',
        cookie: 'connect.sid=s%3AKDtBdzw29bMB2ge32x9VYXk9.dMdd6L0nRnrwOS%2Fw6en9C6XoPbc3zG2rBxAxCXDsSmU',
        'user-agent': 'node-superagent/0.21.0' },
     _headerNames: 
      { host: 'Host',
        'accept-encoding': 'accept-encoding',
        cookie: 'Cookie',
        'user-agent': 'user-agent' },
     _header: 'GET /secure/signup HTTP/1.1\r\nHost: localhost:8000\r\naccept-encoding: gzip, deflate\r\nCookie: connect.sid=s%3AKDtBdzw29bMB2ge32x9VYXk9.dMdd6L0nRnrwOS%2Fw6en9C6XoPbc3zG2rBxAxCXDsSmU\r\nuser-agent: node-superagent/0.21.0\r\nConnection: close\r\n\r\n',
     _headerSent: true,
     parser: null,
     res: 
      { _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Object],
        trailers: {},
        rawTrailers: [],
        _pendings: [],
        _pendingIndex: 0,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Object],
        _consuming: true,
        _dumped: false,
        req: [Circular],
        text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
        read: [Function],
        body: undefined } },
  links: {},
  text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
  body: {},
  files: {},
  buffered: true,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'text/html; charset=utf-8',
     'content-length': '3489',
     etag: 'W/"Zwfn18UrcBPYVCw28QZc3A=="',
     date: 'Thu, 15 Jan 2015 20:39:41 GMT',
     connection: 'close' },
  header: 
   { 'x-powered-by': 'Express',
     'content-type': 'text/html; charset=utf-8',
     'content-length': '3489',
     etag: 'W/"Zwfn18UrcBPYVCw28QZc3A=="',
     date: 'Thu, 15 Jan 2015 20:39:41 GMT',
     connection: 'close' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  charset: 'utf-8',
  type: 'text/html',
  setEncoding: [Function],
  redirects: [ 'https://localhost:8000/secure/signup' ] }
[2K[0G  [31m  1) gets orderconfirmation[0m


[92m [0m[32m 0 passing[0m[90m (173ms)[0m
[31m  1 failing[0m

[0m  1) express rest api server gets orderconfirmation:
[0m[31m     Uncaught Error: expected [ 'https://localhost:8000/secure/signup' ] to equal 's'[0m[90m
      at Assertion.assert (/home/antti/code/meshop/server/node_modules/expect.js/index.js:96:13)
      at Assertion.be.Assertion.equal (/home/antti/code/meshop/server/node_modules/expect.js/index.js:216:10)
      at Assertion.(anonymous function) [as be] (/home/antti/code/meshop/server/node_modules/expect.js/index.js:69:24)
      at /home/antti/code/meshop/server/spec/routes.spec.js:42:30
      at Request.callback (/home/antti/code/meshop/server/node_modules/superagent/lib/node/index.js:746:30)
      at Request.<anonymous> (/home/antti/code/meshop/server/node_modules/superagent/lib/node/index.js:135:10)
      at Request.emit (events.js:129:20)
      at IncomingMessage.<anonymous> (/home/antti/code/meshop/server/node_modules/superagent/lib/node/index.js:938:12)
      at IncomingMessage.emit (events.js:129:20)
      at _stream_readable.js:907:16
      at process._tickCallback (node.js:372:11)
[0m


]0;antti@antti-VirtualBox: ~/code/meshop/server/specantti@antti-VirtualBox:~/code/meshop/server/spec$ ^C
]0;antti@antti-VirtualBox: ~/code/meshop/server/specantti@antti-VirtualBox:~/code/meshop/server/spec$ mocha routes.spec.js 

[0m[0m
[0m  express rest api server[0m
{ domain: null,
  _events: {},
  _maxListeners: undefined,
  res: 
   { _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: [Object],
        encoding: 'utf8',
        resumeScheduled: false },
     readable: false,
     domain: null,
     _events: 
      { end: [Object],
        data: [Object],
        close: [Function],
        error: [Function] },
     _maxListeners: undefined,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 234,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 234,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers: 
      { 'x-powered-by': 'Express',
        'content-type': 'text/html; charset=utf-8',
        'content-length': '3489',
        etag: 'W/"Zwfn18UrcBPYVCw28QZc3A=="',
        date: 'Thu, 15 Jan 2015 20:40:01 GMT',
        connection: 'close' },
     rawHeaders: 
      [ 'X-Powered-By',
        'Express',
        'Content-Type',
        'text/html; charset=utf-8',
        'Content-Length',
        '3489',
        'ETag',
        'W/"Zwfn18UrcBPYVCw28QZc3A=="',
        'Date',
        'Thu, 15 Jan 2015 20:40:01 GMT',
        'Connection',
        'close' ],
     trailers: {},
     rawTrailers: [],
     _pendings: [],
     _pendingIndex: 0,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 234,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     _consuming: true,
     _dumped: false,
     req: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedHeader: {},
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        socket: [Object],
        connection: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'GET',
        path: '/secure/signup',
        _headers: [Object],
        _headerNames: [Object],
        _header: 'GET /secure/signup HTTP/1.1\r\nHost: localhost:8000\r\naccept-encoding: gzip, deflate\r\nCookie: connect.sid=s%3AzrX1cTkYCJ90KINpzWAQW06b.hSslqwhn7FwO77UlLwZao2YpgFC5WcKFYFErOnC4Rks\r\nuser-agent: node-superagent/0.21.0\r\nConnection: close\r\n\r\n',
        _headerSent: true,
        parser: null,
        res: [Circular] },
     text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
     read: [Function],
     body: undefined },
  request: 
   { domain: null,
     _events: { end: [Function], response: [Object], redirect: [Object] },
     _maxListeners: undefined,
     _agent: false,
     _formData: null,
     method: 'GET',
     url: 'https://localhost:8000/secure/signup',
     header: {},
     writable: true,
     _redirects: 1,
     _maxRedirects: 5,
     cookies: 'connect.sid=s%3AzrX1cTkYCJ90KINpzWAQW06b.hSslqwhn7FwO77UlLwZao2YpgFC5WcKFYFErOnC4Rks',
     qs: {},
     _redirectList: [ 'https://localhost:8000/secure/signup' ],
     _ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 70 54 43 43 41 6f 32 67 41 77 49 42 41 67 49 4a 41 49 ... >,
     protocol: 'https:',
     host: 'localhost:8000',
     _callback: [Function],
     res: 
      { _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Object],
        trailers: {},
        rawTrailers: [],
        _pendings: [],
        _pendingIndex: 0,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Object],
        _consuming: true,
        _dumped: false,
        req: [Object],
        text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
        read: [Function],
        body: undefined },
     _data: null,
     _timeout: 0,
     req: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedHeader: {},
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        socket: [Object],
        connection: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'GET',
        path: '/secure/signup',
        _headers: [Object],
        _headerNames: [Object],
        _header: 'GET /secure/signup HTTP/1.1\r\nHost: localhost:8000\r\naccept-encoding: gzip, deflate\r\nCookie: connect.sid=s%3AzrX1cTkYCJ90KINpzWAQW06b.hSslqwhn7FwO77UlLwZao2YpgFC5WcKFYFErOnC4Rks\r\nuser-agent: node-superagent/0.21.0\r\nConnection: close\r\n\r\n',
        _headerSent: true,
        parser: null,
        res: [Object] },
     response: [Circular],
     called: true },
  req: 
   { domain: null,
     _events: { drain: [Function], error: [Function], response: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: false,
     sendDate: false,
     _removedHeader: {},
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 234,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 234,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 443,
        protocol: 'https:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'GET',
     path: '/secure/signup',
     _headers: 
      { host: 'localhost:8000',
        'accept-encoding': 'gzip, deflate',
        cookie: 'connect.sid=s%3AzrX1cTkYCJ90KINpzWAQW06b.hSslqwhn7FwO77UlLwZao2YpgFC5WcKFYFErOnC4Rks',
        'user-agent': 'node-superagent/0.21.0' },
     _headerNames: 
      { host: 'Host',
        'accept-encoding': 'accept-encoding',
        cookie: 'Cookie',
        'user-agent': 'user-agent' },
     _header: 'GET /secure/signup HTTP/1.1\r\nHost: localhost:8000\r\naccept-encoding: gzip, deflate\r\nCookie: connect.sid=s%3AzrX1cTkYCJ90KINpzWAQW06b.hSslqwhn7FwO77UlLwZao2YpgFC5WcKFYFErOnC4Rks\r\nuser-agent: node-superagent/0.21.0\r\nConnection: close\r\n\r\n',
     _headerSent: true,
     parser: null,
     res: 
      { _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Object],
        trailers: {},
        rawTrailers: [],
        _pendings: [],
        _pendingIndex: 0,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Object],
        _consuming: true,
        _dumped: false,
        req: [Circular],
        text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
        read: [Function],
        body: undefined } },
  links: {},
  text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
  body: {},
  files: {},
  buffered: true,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'text/html; charset=utf-8',
     'content-length': '3489',
     etag: 'W/"Zwfn18UrcBPYVCw28QZc3A=="',
     date: 'Thu, 15 Jan 2015 20:40:01 GMT',
     connection: 'close' },
  header: 
   { 'x-powered-by': 'Express',
     'content-type': 'text/html; charset=utf-8',
     'content-length': '3489',
     etag: 'W/"Zwfn18UrcBPYVCw28QZc3A=="',
     date: 'Thu, 15 Jan 2015 20:40:01 GMT',
     connection: 'close' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  charset: 'utf-8',
  type: 'text/html',
  setEncoding: [Function],
  redirects: [ 'https://localhost:8000/secure/signup' ] }
[2K[0G  [31m  1) gets orderconfirmation[0m


[92m [0m[32m 0 passing[0m[90m (177ms)[0m
[31m  1 failing[0m

[0m  1) express rest api server gets orderconfirmation:
[0m[31m     Uncaught Error: expected [ 'https://localhost:8000/secure/signup' ] to equal 'https://localhost:8000/secure/signup'[0m[90m
      at Assertion.assert (/home/antti/code/meshop/server/node_modules/expect.js/index.js:96:13)
      at Assertion.be.Assertion.equal (/home/antti/code/meshop/server/node_modules/expect.js/index.js:216:10)
      at Assertion.(anonymous function) [as be] (/home/antti/code/meshop/server/node_modules/expect.js/index.js:69:24)
      at /home/antti/code/meshop/server/spec/routes.spec.js:42:30
      at Request.callback (/home/antti/code/meshop/server/node_modules/superagent/lib/node/index.js:746:30)
      at Request.<anonymous> (/home/antti/code/meshop/server/node_modules/superagent/lib/node/index.js:135:10)
      at Request.emit (events.js:129:20)
      at IncomingMessage.<anonymous> (/home/antti/code/meshop/server/node_modules/superagent/lib/node/index.js:938:12)
      at IncomingMessage.emit (events.js:129:20)
      at _stream_readable.js:907:16
      at process._tickCallback (node.js:372:11)
[0m


]0;antti@antti-VirtualBox: ~/code/meshop/server/specantti@antti-VirtualBox:~/code/meshop/server/spec$ [K]0;antti@antti-VirtualBox: ~/code/meshop/server/specantti@antti-VirtualBox:~/code/meshop/server/spec$ mocha routes.spec.js 

[0m[0m
[0m  express rest api server[0m
{ domain: null,
  _events: {},
  _maxListeners: undefined,
  res: 
   { _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: [Object],
        encoding: 'utf8',
        resumeScheduled: false },
     readable: false,
     domain: null,
     _events: 
      { end: [Object],
        data: [Object],
        close: [Function],
        error: [Function] },
     _maxListeners: undefined,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 234,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 234,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers: 
      { 'x-powered-by': 'Express',
        'content-type': 'text/html; charset=utf-8',
        'content-length': '3489',
        etag: 'W/"Zwfn18UrcBPYVCw28QZc3A=="',
        date: 'Thu, 15 Jan 2015 20:40:46 GMT',
        connection: 'close' },
     rawHeaders: 
      [ 'X-Powered-By',
        'Express',
        'Content-Type',
        'text/html; charset=utf-8',
        'Content-Length',
        '3489',
        'ETag',
        'W/"Zwfn18UrcBPYVCw28QZc3A=="',
        'Date',
        'Thu, 15 Jan 2015 20:40:46 GMT',
        'Connection',
        'close' ],
     trailers: {},
     rawTrailers: [],
     _pendings: [],
     _pendingIndex: 0,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 234,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     _consuming: true,
     _dumped: false,
     req: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedHeader: {},
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        socket: [Object],
        connection: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'GET',
        path: '/secure/signup',
        _headers: [Object],
        _headerNames: [Object],
        _header: 'GET /secure/signup HTTP/1.1\r\nHost: localhost:8000\r\naccept-encoding: gzip, deflate\r\nCookie: connect.sid=s%3AMZZPOVHVrGRlWbXWVo7RgZWJ.ZbhxHY3OrJqdBTUVFQKZyGiVsNLvC5gAaMUw9STto9Y\r\nuser-agent: node-superagent/0.21.0\r\nConnection: close\r\n\r\n',
        _headerSent: true,
        parser: null,
        res: [Circular] },
     text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
     read: [Function],
     body: undefined },
  request: 
   { domain: null,
     _events: { end: [Function], response: [Object], redirect: [Object] },
     _maxListeners: undefined,
     _agent: false,
     _formData: null,
     method: 'GET',
     url: 'https://localhost:8000/secure/signup',
     header: {},
     writable: true,
     _redirects: 1,
     _maxRedirects: 5,
     cookies: 'connect.sid=s%3AMZZPOVHVrGRlWbXWVo7RgZWJ.ZbhxHY3OrJqdBTUVFQKZyGiVsNLvC5gAaMUw9STto9Y',
     qs: {},
     _redirectList: [ 'https://localhost:8000/secure/signup' ],
     _ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 70 54 43 43 41 6f 32 67 41 77 49 42 41 67 49 4a 41 49 ... >,
     protocol: 'https:',
     host: 'localhost:8000',
     _callback: [Function],
     res: 
      { _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Object],
        trailers: {},
        rawTrailers: [],
        _pendings: [],
        _pendingIndex: 0,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Object],
        _consuming: true,
        _dumped: false,
        req: [Object],
        text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
        read: [Function],
        body: undefined },
     _data: null,
     _timeout: 0,
     req: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedHeader: {},
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        socket: [Object],
        connection: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'GET',
        path: '/secure/signup',
        _headers: [Object],
        _headerNames: [Object],
        _header: 'GET /secure/signup HTTP/1.1\r\nHost: localhost:8000\r\naccept-encoding: gzip, deflate\r\nCookie: connect.sid=s%3AMZZPOVHVrGRlWbXWVo7RgZWJ.ZbhxHY3OrJqdBTUVFQKZyGiVsNLvC5gAaMUw9STto9Y\r\nuser-agent: node-superagent/0.21.0\r\nConnection: close\r\n\r\n',
        _headerSent: true,
        parser: null,
        res: [Object] },
     response: [Circular],
     called: true },
  req: 
   { domain: null,
     _events: { drain: [Function], error: [Function], response: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: false,
     sendDate: false,
     _removedHeader: {},
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 234,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 234,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 443,
        protocol: 'https:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'GET',
     path: '/secure/signup',
     _headers: 
      { host: 'localhost:8000',
        'accept-encoding': 'gzip, deflate',
        cookie: 'connect.sid=s%3AMZZPOVHVrGRlWbXWVo7RgZWJ.ZbhxHY3OrJqdBTUVFQKZyGiVsNLvC5gAaMUw9STto9Y',
        'user-agent': 'node-superagent/0.21.0' },
     _headerNames: 
      { host: 'Host',
        'accept-encoding': 'accept-encoding',
        cookie: 'Cookie',
        'user-agent': 'user-agent' },
     _header: 'GET /secure/signup HTTP/1.1\r\nHost: localhost:8000\r\naccept-encoding: gzip, deflate\r\nCookie: connect.sid=s%3AMZZPOVHVrGRlWbXWVo7RgZWJ.ZbhxHY3OrJqdBTUVFQKZyGiVsNLvC5gAaMUw9STto9Y\r\nuser-agent: node-superagent/0.21.0\r\nConnection: close\r\n\r\n',
     _headerSent: true,
     parser: null,
     res: 
      { _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Object],
        trailers: {},
        rawTrailers: [],
        _pendings: [],
        _pendingIndex: 0,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Object],
        _consuming: true,
        _dumped: false,
        req: [Circular],
        text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
        read: [Function],
        body: undefined } },
  links: {},
  text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
  body: {},
  files: {},
  buffered: true,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'text/html; charset=utf-8',
     'content-length': '3489',
     etag: 'W/"Zwfn18UrcBPYVCw28QZc3A=="',
     date: 'Thu, 15 Jan 2015 20:40:46 GMT',
     connection: 'close' },
  header: 
   { 'x-powered-by': 'Express',
     'content-type': 'text/html; charset=utf-8',
     'content-length': '3489',
     etag: 'W/"Zwfn18UrcBPYVCw28QZc3A=="',
     date: 'Thu, 15 Jan 2015 20:40:46 GMT',
     connection: 'close' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  charset: 'utf-8',
  type: 'text/html',
  setEncoding: [Function],
  redirects: [ 'https://localhost:8000/secure/signup' ] }
[2K[0G  [31m  1) gets orderconfirmation[0m


[92m [0m[32m 0 passing[0m[90m (129ms)[0m
[31m  1 failing[0m

[0m  1) express rest api server gets orderconfirmation:
[0m[31m     Uncaught Error: expected [ 'https://localhost:8000/secure/signup' ] to equal 'https://localhost:8000/secure/signup'[0m[90m
      at Assertion.assert (/home/antti/code/meshop/server/node_modules/expect.js/index.js:96:13)
      at Assertion.be.Assertion.equal (/home/antti/code/meshop/server/node_modules/expect.js/index.js:216:10)
      at Assertion.(anonymous function) [as be] (/home/antti/code/meshop/server/node_modules/expect.js/index.js:69:24)
      at /home/antti/code/meshop/server/spec/routes.spec.js:42:30
      at Request.callback (/home/antti/code/meshop/server/node_modules/superagent/lib/node/index.js:746:30)
      at Request.<anonymous> (/home/antti/code/meshop/server/node_modules/superagent/lib/node/index.js:135:10)
      at Request.emit (events.js:129:20)
      at IncomingMessage.<anonymous> (/home/antti/code/meshop/server/node_modules/superagent/lib/node/index.js:938:12)
      at IncomingMessage.emit (events.js:129:20)
      at _stream_readable.js:907:16
      at process._tickCallback (node.js:372:11)
[0m


]0;antti@antti-VirtualBox: ~/code/meshop/server/specantti@antti-VirtualBox:~/code/meshop/server/spec$ mocha routes.spec.js 

[0m[0m
[0m  express rest api server[0m
{ domain: null,
  _events: {},
  _maxListeners: undefined,
  res: 
   { _readableState: 
      { objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: [Object],
        encoding: 'utf8',
        resumeScheduled: false },
     readable: false,
     domain: null,
     _events: 
      { end: [Object],
        data: [Object],
        close: [Function],
        error: [Function] },
     _maxListeners: undefined,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 236,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 236,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers: 
      { 'x-powered-by': 'Express',
        'content-type': 'text/html; charset=utf-8',
        'content-length': '3489',
        etag: 'W/"Zwfn18UrcBPYVCw28QZc3A=="',
        date: 'Thu, 15 Jan 2015 20:44:09 GMT',
        connection: 'close' },
     rawHeaders: 
      [ 'X-Powered-By',
        'Express',
        'Content-Type',
        'text/html; charset=utf-8',
        'Content-Length',
        '3489',
        'ETag',
        'W/"Zwfn18UrcBPYVCw28QZc3A=="',
        'Date',
        'Thu, 15 Jan 2015 20:44:09 GMT',
        'Connection',
        'close' ],
     trailers: {},
     rawTrailers: [],
     _pendings: [],
     _pendingIndex: 0,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 236,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     _consuming: true,
     _dumped: false,
     req: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedHeader: {},
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        socket: [Object],
        connection: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'GET',
        path: '/secure/signup',
        _headers: [Object],
        _headerNames: [Object],
        _header: 'GET /secure/signup HTTP/1.1\r\nHost: localhost:8000\r\naccept-encoding: gzip, deflate\r\nCookie: connect.sid=s%3ABLhNIKNlHp0lJBtk1hc3MN53.PoIdXRgRD8yp8fuuNDhUaI1WEKwBtyt%2FSc43fv4sIfM\r\nuser-agent: node-superagent/0.21.0\r\nConnection: close\r\n\r\n',
        _headerSent: true,
        parser: null,
        res: [Circular] },
     text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
     read: [Function],
     body: undefined },
  request: 
   { domain: null,
     _events: { end: [Function], response: [Object], redirect: [Object] },
     _maxListeners: undefined,
     _agent: false,
     _formData: null,
     method: 'GET',
     url: 'https://localhost:8000/secure/signup',
     header: {},
     writable: true,
     _redirects: 1,
     _maxRedirects: 5,
     cookies: 'connect.sid=s%3ABLhNIKNlHp0lJBtk1hc3MN53.PoIdXRgRD8yp8fuuNDhUaI1WEKwBtyt%2FSc43fv4sIfM',
     qs: {},
     _redirectList: [ 'https://localhost:8000/secure/signup' ],
     _ca: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0a 4d 49 49 44 70 54 43 43 41 6f 32 67 41 77 49 42 41 67 49 4a 41 49 ... >,
     protocol: 'https:',
     host: 'localhost:8000',
     _callback: [Function],
     res: 
      { _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Object],
        trailers: {},
        rawTrailers: [],
        _pendings: [],
        _pendingIndex: 0,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Object],
        _consuming: true,
        _dumped: false,
        req: [Object],
        text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
        read: [Function],
        body: undefined },
     _data: null,
     _timeout: 0,
     req: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedHeader: {},
        _hasBody: true,
        _trailer: '',
        finished: true,
        _hangupClose: false,
        socket: [Object],
        connection: [Object],
        agent: [Object],
        socketPath: undefined,
        method: 'GET',
        path: '/secure/signup',
        _headers: [Object],
        _headerNames: [Object],
        _header: 'GET /secure/signup HTTP/1.1\r\nHost: localhost:8000\r\naccept-encoding: gzip, deflate\r\nCookie: connect.sid=s%3ABLhNIKNlHp0lJBtk1hc3MN53.PoIdXRgRD8yp8fuuNDhUaI1WEKwBtyt%2FSc43fv4sIfM\r\nuser-agent: node-superagent/0.21.0\r\nConnection: close\r\n\r\n',
        _headerSent: true,
        parser: null,
        res: [Object] },
     response: [Circular],
     called: true },
  req: 
   { domain: null,
     _events: { drain: [Function], error: [Function], response: [Function] },
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: false,
     sendDate: false,
     _removedHeader: {},
     _hasBody: true,
     _trailer: '',
     finished: true,
     _hangupClose: false,
     socket: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 236,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     connection: 
      { _connecting: false,
        _hadError: false,
        _handle: null,
        _host: 'localhost',
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 3685,
        _bytesDispatched: 236,
        _pendingData: null,
        _pendingEncoding: '',
        _tlsOptions: [Object],
        _secureEstablished: true,
        _securePending: false,
        _newSessionPending: false,
        _controlReleased: true,
        _SNICallback: null,
        ssl: [Object],
        servername: null,
        npnProtocol: false,
        authorized: true,
        authorizationError: null,
        encrypted: true,
        parser: null,
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true,
        server: null,
        _requestCert: true,
        _rejectUnauthorized: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     agent: 
      { domain: null,
        _events: [Object],
        _maxListeners: undefined,
        defaultPort: 443,
        protocol: 'https:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'GET',
     path: '/secure/signup',
     _headers: 
      { host: 'localhost:8000',
        'accept-encoding': 'gzip, deflate',
        cookie: 'connect.sid=s%3ABLhNIKNlHp0lJBtk1hc3MN53.PoIdXRgRD8yp8fuuNDhUaI1WEKwBtyt%2FSc43fv4sIfM',
        'user-agent': 'node-superagent/0.21.0' },
     _headerNames: 
      { host: 'Host',
        'accept-encoding': 'accept-encoding',
        cookie: 'Cookie',
        'user-agent': 'user-agent' },
     _header: 'GET /secure/signup HTTP/1.1\r\nHost: localhost:8000\r\naccept-encoding: gzip, deflate\r\nCookie: connect.sid=s%3ABLhNIKNlHp0lJBtk1hc3MN53.PoIdXRgRD8yp8fuuNDhUaI1WEKwBtyt%2FSc43fv4sIfM\r\nuser-agent: node-superagent/0.21.0\r\nConnection: close\r\n\r\n',
     _headerSent: true,
     parser: null,
     res: 
      { _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Object],
        trailers: {},
        rawTrailers: [],
        _pendings: [],
        _pendingIndex: 0,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Object],
        _consuming: true,
        _dumped: false,
        req: [Circular],
        text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n            <div class="col-sm-6 col-sm-offset-3">\n                <h1><span class="fa fa-sign-in"></span> Signup</h1>\n                <!-- show any messages that come back with authentication -->\n                \n                <!-- LOGIN FORM -->\n                <form action="/signup" method="post">\n                    <div class="form-group">\n                        <label>Email</label>\n                        <input type="text" class="form-control" name="email">\n                    </div>\n                    <div class="form-group">\n                        <label>Password</label>\n                        <input type="password" class="form-control" name="password">\n                    </div>\n                    <button type="submit" class="btn btn-warning btn-lg">Signup</button>\n                </form>\n                <hr>\n                <p>Already have an account? <a href="/login">Login</a></p>\n                <p>Or go <a href="/">home</a>.</p>\n            </div>\n        </div>\n    </body>\n</html>',
        read: [Function],
        body: undefined } },
  links: {},
  text: '<!-- views/signup.ejs -->\n<!doctype html>\n<html>\n    <head>\n        <title>Node Authentication</title>\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->\n        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->\n        <style>\n        body        { padding-top:80px; }\n        </style>\n    </head>\n    <body>\n        <header>\n            <style type="text/css">\n    .navbar-inverse {\n  background-color: #107BED;\n}\n.navbar-inverse a {\n  color: #fff !important;\n}\n</style>\n<!-- Navigation -->\n<nav ng-controller="NavCtrl" id="navigation" class="navbar navbar-inverse navbar-fixed-top" role="navigation">\n  <div class="container">\n    <!-- Brand and toggle get grouped for better mobile display -->\n    <div class="navbar-header">\n      <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\n      <span class="sr-only">Toggle navigation</span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      <span class="icon-bar"></span>\n      </button>\n      <a class="navbar-brand" href="/">amatika\'s</a>\n    </div>\n    <!-- Collect the nav links, forms, and other content for toggling -->\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\n<!--       <ul class="nav navbar-nav">\n        <li>\n          <a href="#/">About</a>\n        </li>\n        <li>\n          <a href="#/">Services</a>\n        </li>\n        <li>\n          <a ng-href="#/contact">Contact</a>\n        </li>\n        <li id="signup" ng-show="!username || username.length == 0">\n          <a href="/signup">Sign up</a>\n        </li>\n        <li id="login" ng-show="!username || username.length == 0">\n          <a href="/login">Login</a>\n        </li>\n\n      </ul>\n -->      <!-- <a ng-href="#/cart">\n        <div id="cart_summary" class="pull-right col-sm-2">\n          <ngcart-summary></ngcart-summary>\n        </div>\n      </a>\n      <div class="row">\n        <div ng-show="username.length > 0">\n          <a class="pull-right" id="logout" ng-click="logout()">Logout</a>\n          <span class="pull-right">&nbsp;|&nbsp;</span>\n          <div class="pull-right">{{ username }}</div>\n        </div>\n      </div> -->\n    </div>\n    <!-- /.navbar-collapse -->\n  </div>\n  <!-- /.container -->\n</nav>\n        </header>\n        <div class="container">\n          